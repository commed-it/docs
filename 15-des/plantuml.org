#+TITLE: Plantuml
#+begin_src plantuml :file sec/img/api-calls.png :dir .
!theme plain
activate Client
activate Server
Client -> Server: "/chat/encounter/{id}/messages"
Server --> Client : [msg1, msg2, msg3...]
Client -> Server:  "/ws/chat/{id}/"
Server --> Client: "socket.accept()"
loop while the websocket is active
    alt Client starts communication
        Client --> Server: a message
        Client --> Client: show message
    else Server starts communication
        Server --> Client: a message
        Server --> Server: validate message
        Server --> Server: save message
        Server --> Server: send message to group chat
    end
end
deactivate Client
#+end_src

#+RESULTS:
[[file:sec/img/api-calls.png]]


#+begin_src json
{
  "user": id,
  "type": "message" | "formalOffer",
  "message": "text",
  "formalOffer": formalOfferId,
}

#+end_src


* New Database model
#+begin_src plantuml :file img/db.png :dir .
!theme plain

namespace product {
class Product <<persistent>> {
    + id : Int
    ..
    + owner : User
    + description : Text
    + latitude : Double
    + longitude : Double
}

class ProductImage <<persistent>> {
    + name : Chars
    + imageFile : ImageFile
}

class Tag <<persistent>> {
    + name : Chars
}

class Category <<persistent>> {
    + name : Chars
}

Product *-- ProductImage
Tag <-- Product
Category *-- Tag

}

namespace enterprise {

    class Enterprise <<persistent>> {
        + owner : User.id
        ..
        + NIF : Chars
        + name : Chars
        + contactInfo : Chars
        + description : RichText
        ..
        + logo: ImageFile
        + banner: ImageFile
        + location: Chars
    }
}


class User <<persistent>> {
    + id: Int
    ..
    + email : Chars
    + username : Chars
    + password : Chars
}

namespace offer {

class Encounter {

}

class FormalOffer <<persistent>> {
    + encounterId : Int
    + version : Int
    ..
    + contract : RichText
    ..
    + pdf : File
    + state: StateFormalOffer
}
}



User "1" -- "0..*" product.Product : owns >
User "1" -- "1" enterprise.Enterprise : owns >
User "1" -- "*" offer.Encounter : isInterestedInProduct >
product.Product "1" -- "0..*" offer.Encounter : startedChat >
offer.FormalOffer "0..*" -- "1" offer.Encounter : startedFormalOffer <


#+end_src

#+RESULTS:
[[file:img/db.png]]
